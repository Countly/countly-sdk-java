apply plugin: 'com.android.library'
//apply plugin: 'bintray-release'
apply plugin: 'maven'

//Plugin for generating test coverage reports.
//They are generated by calling the following from the root folder:
// ./gradlew createDebugCoverageReport
//apply plugin: 'jacoco-android'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        //classpath 'com.novoda:bintray-release:0.9.1'
        //classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    }
}
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 28
        versionCode 1
        versionName "19.01-sdk2-pre-rc2"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testHandleProfiling true
        testFunctionalTest true
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    // This enables long timeouts required on slow environments, e.g. Travis
    adbOptions {
        timeOutInMs 20 * 60 * 1000  // 20 minutes
        installOptions "-d","-t"
    }

    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }

    sourceSets {
        androidTest {
            resources.srcDirs += ['src/androidTest/resources']
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':core')

    androidTestImplementation project(':core')
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "com.android.support:support-annotations:28.0.0"
    androidTestImplementation 'junit:junit:4.12'

    androidTestImplementation 'org.mockito:mockito-core:2.8.9'

    androidTestImplementation "org.powermock:powermock-core:${POWERMOCK_VERSION}"
    androidTestImplementation "org.powermock:powermock-module-junit4:${POWERMOCK_VERSION}"

    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'

    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.7.0'
}

/*
publish {
    userOrg = 'countly'
    groupId = 'ly.count.sdk.android'
    artifactId = 'sdk'
    publishVersion = CLY_VERSION
    desc = 'Android SDK for Countly mobile analytics'
    website = 'https://github.com/Countly/countly-sdk-android'
    autoPublish = false
}
*/